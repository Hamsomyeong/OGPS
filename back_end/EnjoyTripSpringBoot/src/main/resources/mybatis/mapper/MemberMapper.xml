<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
	<mapper namespace="com.ssafy.enjoy.member.repository.MemberRepository">
		<resultMap id="memberMap" type="memberDto">
			<result column="user_id" property="user_id" jdbcType="VARCHAR" javaType="String"/>
			<result column="user_name" property="user_name" jdbcType="VARCHAR" javaType="String"/>
			<result column="user_password" property="user_password" jdbcType="VARCHAR" javaType="String"/>
			<result column="email_id" property="email_id" jdbcType="VARCHAR" javaType="String"/>
			<result column="token" property="token" jdbcType="VARCHAR" javaType="String"/>
		</resultMap>
	
	
		<insert id="memberJoin" parameterType="memberDto">
<!-- 			insert into members(userId, userName, userPassword, emailId, emailDomain, joinDate, grade)
			values (#{userId}, #{userName}, #{userPassword}, #{emailId}, #{emailDomain}, now(), #{grade}) -->
			insert into members(userId, userName, userPassword, userEmail, joinDate, grade)
			values (#{userId}, #{userName}, #{userPassword}, #{userEmail}, now(), #{grade}) 
		</insert>
		<select id="login" parameterType="memberDto" resultMap="memberMap">
			select userId,userName,userPassword,userEmail,grade from members
			where userId=#{userId} and userPassword=#{userPassword}
		</select> 
		<update id="memberUpdate" parameterType="memberDto">
			update members set userName=#{userName},userPassword=#{userPassword},
			userId=#{userId},userEmail=#{userEmail}
			where userId=#{userId}
		</update>
		<delete id="memberDelete" parameterType="string">
			delete from members where userId=#{id}
		</delete>
		
		<select id="userInfo" parameterType="string" resultType="memberDto">
			select userName, userId, emailId, joinDate
			from members
			where userId = #{userId}
		</select>
	
		<select id="getRefreshToken" parameterType="string" resultType="string">
			select token
			from members
			where userId = #{userId}
		</select>
		
		<update id="saveRefreshToken" parameterType="map">
			update members
			set token = #{token}
			where userId = #{userId}
		</update>
		
		<update id="deleteRefreshToken" parameterType="map">
			update members
			set token = #{token, jdbcType=VARCHAR}
			where userId = #{userId}
		</update>
	</mapper>